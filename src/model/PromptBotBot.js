/**
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.22196
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Bombbomb) {
      root.Bombbomb = {};
    }
    root.Bombbomb.PromptBotBot = factory(root.Bombbomb.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The PromptBotBot model module.
   * @module model/PromptBotBot
   * @version 2.0.22196
   */

  /**
   * Constructs a new <code>PromptBotBot</code>.
   * The PromptBot\\Bot class
   * @alias module:model/PromptBotBot
   * @class
   */
  var exports = function() {
    var _this = this;












  };

  /**
   * Constructs a <code>PromptBotBot</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PromptBotBot} obj Optional instance to populate.
   * @return {module:model/PromptBotBot} The populated <code>PromptBotBot</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
      }
      if (data.hasOwnProperty('emailId')) {
        obj['emailId'] = ApiClient.convertToType(data['emailId'], 'String');
      }
      if (data.hasOwnProperty('listId')) {
        obj['listId'] = ApiClient.convertToType(data['listId'], 'String');
      }
      if (data.hasOwnProperty('promptSubject')) {
        obj['promptSubject'] = ApiClient.convertToType(data['promptSubject'], 'String');
      }
      if (data.hasOwnProperty('promptBody')) {
        obj['promptBody'] = ApiClient.convertToType(data['promptBody'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('startDate')) {
        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
      }
      if (data.hasOwnProperty('endDate')) {
        obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
      }
      if (data.hasOwnProperty('botTypeId')) {
        obj['botTypeId'] = ApiClient.convertToType(data['botTypeId'], 'String');
      }
      if (data.hasOwnProperty('templateId')) {
        obj['templateId'] = ApiClient.convertToType(data['templateId'], 'String');
      }
    }
    return obj;
  }

  /**
   * The identifier of the prompt bot. Read Only.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The prompt bot's owner. Read Only.
   * @member {String} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * The default email being sent to contacts in the prompt bot list.
   * @member {String} emailId
   */
  exports.prototype['emailId'] = undefined;
  /**
   * The list to attach the Prompt Bot to.
   * @member {String} listId
   */
  exports.prototype['listId'] = undefined;
  /**
   * The prompt subject.
   * @member {String} promptSubject
   */
  exports.prototype['promptSubject'] = undefined;
  /**
   * The prompt body.
   * @member {String} promptBody
   */
  exports.prototype['promptBody'] = undefined;
  /**
   * The status of the prompt bot. Read Only.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * when the bot started
   * @member {Date} startDate
   */
  exports.prototype['startDate'] = undefined;
  /**
   * when the bot should finish
   * @member {Date} endDate
   */
  exports.prototype['endDate'] = undefined;
  /**
   * The type of bot.
   * @member {String} botTypeId
   */
  exports.prototype['botTypeId'] = undefined;
  /**
   * The template id used to generate the default email.
   * @member {String} templateId
   */
  exports.prototype['templateId'] = undefined;



  return exports;
}));


