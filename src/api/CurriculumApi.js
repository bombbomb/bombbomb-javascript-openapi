/**
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Curriculum', 'model/CurriculumWithProgress'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Curriculum'), require('../model/CurriculumWithProgress'));
  } else {
    // Browser globals (root is window)
    if (!root.Bombbomb) {
      root.Bombbomb = {};
    }
    root.Bombbomb.CurriculumApi = factory(root.Bombbomb.ApiClient, root.Bombbomb.Curriculum, root.Bombbomb.CurriculumWithProgress);
  }
}(this, function(ApiClient, Curriculum, CurriculumWithProgress) {
  'use strict';

  /**
   * Curriculum service.
   * @module api/CurriculumApi
   * @version 2.0.831
   */

  /**
   * Constructs a new CurriculumApi. 
   * @alias module:api/CurriculumApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getCurricula operation.
     * @callback module:api/CurriculumApi~getCurriculaCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Curriculum>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Curricula
     * Get Curricula, optionally with progress included.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeProgress Whether to return progress with the curriculum.
     * @param {module:api/CurriculumApi~getCurriculaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Curriculum>}
     */
    this.getCurricula = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'includeProgress': opts['includeProgress'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BBOAuth2'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = [Curriculum];

      return this.apiClient.callApi(
        '/curricula/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getUserCurriculumWithProgress operation.
     * @callback module:api/CurriculumApi~getUserCurriculumWithProgressCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CurriculumWithProgress>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Detailed For User
     * Get all curricula for user including progress for each curriculum.
     * @param {module:api/CurriculumApi~getUserCurriculumWithProgressCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CurriculumWithProgress>}
     */
    this.getUserCurriculumWithProgress = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['BBOAuth2'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = [CurriculumWithProgress];

      return this.apiClient.callApi(
        '/curriculum/getForUserWithProgress', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
