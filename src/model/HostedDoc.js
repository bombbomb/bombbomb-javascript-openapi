/**
 * BombBomb
 * We make it easy to build relationships using simple videos.
 *
 * OpenAPI spec version: 2.0.831
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Bombbomb) {
      root.Bombbomb = {};
    }
    root.Bombbomb.HostedDoc = factory(root.Bombbomb.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The HostedDoc model module.
   * @module model/HostedDoc
   * @version 2.0.25798
   */

  /**
   * Constructs a new <code>HostedDoc</code>.
   * The HostedDoc class
   * @alias module:model/HostedDoc
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>HostedDoc</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HostedDoc} obj Optional instance to populate.
   * @return {module:model/HostedDoc} The populated <code>HostedDoc</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
      }
      if (data.hasOwnProperty('fileName')) {
        obj['fileName'] = ApiClient.convertToType(data['fileName'], 'String');
      }
      if (data.hasOwnProperty('shortUrl')) {
        obj['shortUrl'] = ApiClient.convertToType(data['shortUrl'], 'String');
      }
      if (data.hasOwnProperty('longUrl')) {
        obj['longUrl'] = ApiClient.convertToType(data['longUrl'], 'String');
      }
      if (data.hasOwnProperty('uploadDate')) {
        obj['uploadDate'] = ApiClient.convertToType(data['uploadDate'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The doc's id.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The doc's owner.
   * @member {String} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * docs file name.
   * @member {String} fileName
   */
  exports.prototype['fileName'] = undefined;
  /**
   * The doc's short url.
   * @member {String} shortUrl
   */
  exports.prototype['shortUrl'] = undefined;
  /**
   * The doc's long url.
   * @member {String} longUrl
   */
  exports.prototype['longUrl'] = undefined;
  /**
   * The doc's upload date.
   * @member {Date} uploadDate
   */
  exports.prototype['uploadDate'] = undefined;



  return exports;
}));


